"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[479],{3905:(e,o,a)=>{a.d(o,{Zo:()=>u,kt:()=>v});var r=a(7294);function t(e,o,a){return o in e?Object.defineProperty(e,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[o]=a,e}function n(e,o){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var o=1;o<arguments.length;o++){var a=null!=arguments[o]?arguments[o]:{};o%2?n(Object(a),!0).forEach((function(o){t(e,o,a[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(a,o))}))}return e}function i(e,o){if(null==e)return{};var a,r,t=function(e,o){if(null==e)return{};var a,r,t={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],o.indexOf(a)>=0||(t[a]=e[a]);return t}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var d=r.createContext({}),l=function(e){var o=r.useContext(d),a=o;return e&&(a="function"==typeof e?e(o):s(s({},o),e)),a},u=function(e){var o=l(e.components);return r.createElement(d.Provider,{value:o},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},m=r.forwardRef((function(e,o){var a=e.components,t=e.mdxType,n=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(a),m=t,v=p["".concat(d,".").concat(m)]||p[m]||c[m]||n;return a?r.createElement(v,s(s({ref:o},u),{},{components:a})):r.createElement(v,s({ref:o},u))}));function v(e,o){var a=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var n=a.length,s=new Array(n);s[0]=m;var i={};for(var d in o)hasOwnProperty.call(o,d)&&(i[d]=o[d]);i.originalType=e,i[p]="string"==typeof e?e:t,s[1]=i;for(var l=2;l<n;l++)s[l]=a[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5739:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var r=a(7462),t=(a(7294),a(3905));const n={sidebar_position:2},s="Servidor",i={unversionedId:"arquitetura/servidor",id:"arquitetura/servidor",title:"Servidor",description:"A arquitetura do lado servidor fora desenvolvida pensando em conver uma estrutura de f\xe1cil compreens\xe3o e que adote um padr\xe3o conhecido dentro do ambiente de desenvolvimento de aplica\xe7\xf5es web services.",source:"@site/docs/arquitetura/servidor.md",sourceDirName:"arquitetura",slug:"/arquitetura/servidor",permalink:"/published_chat_app_docs/docs/arquitetura/servidor",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/arquitetura/servidor.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Cliente",permalink:"/published_chat_app_docs/docs/arquitetura/cliente"},next:{title:"Sobre a documenta\xe7\xe3o",permalink:"/published_chat_app_docs/docs/sobre-a-documentacao/"}},d={},l=[{value:"Modelo MVC (Model-View-Controller)",id:"modelo-mvc-model-view-controller",level:2},{value:"Estrutura de pastas",id:"estrutura-de-pastas",level:2}],u={toc:l},p="wrapper";function c(e){let{components:o,...a}=e;return(0,t.kt)(p,(0,r.Z)({},u,a,{components:o,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"servidor"},"Servidor"),(0,t.kt)("p",null,"A arquitetura do lado servidor fora desenvolvida pensando em conver uma estrutura de f\xe1cil compreens\xe3o e que adote um padr\xe3o conhecido dentro do ambiente de desenvolvimento de aplica\xe7\xf5es web services."),(0,t.kt)("h2",{id:"modelo-mvc-model-view-controller"},"Modelo MVC (Model-View-Controller)"),(0,t.kt)("p",null,'O design pattern adotado pela aplica\xe7\xe3o foi o modelo MVC (Model-View-Controller). MVC se trata de um modelo de f\xe1cil compreens\xe3o que define que o usu\xe1rio que interage com a "View" (a interface da aplica\xe7\xe3o) executa as fun\xe7\xf5es que s\xe3o pertencentes ao lado do servidor atrav\xe9s do uso de um "Controller", que \xe9 respons\xe1vel por executar fun\xe7\xf5es de valida\xe7\xe3o, autentica\xe7\xe3o, entre outras. O "Controller" \xe9 tamb\xe9m respons\xe1vel interagir com o "Model" da aplica\xe7\xe3o, que, por sua vez, \xe9 respons\xe1vel por interagir com o banco de dados atrav\xe9s de seus m\xe9todos e devolver essas informa\xe7\xf5es atrav\xe9s de eventos e chamadas ao "View" da aplica\xe7\xe3o, fechando um ciclo por completo.'),(0,t.kt)("p",null,"Note: podemos ter m\xfaltiplos Models, Views e Controllers dentro da aplica\xe7\xe3o para desenvolver as features necess\xe1rias para o esperado funcionamento da aplica\xe7\xe3o."),(0,t.kt)("p",null,"O fluxo de conversa\xe7\xe3o entre o Model, View e o Controller pode ser exemplificado atrav\xe9s do seguinte diagrama disponibilizado pela Universidade Federal de Campina Grande:"),(0,t.kt)("p",null,(0,t.kt)("img",{parentName:"p",src:"http://www.dsc.ufcg.edu.br/~jacques/cursos/map/html/arqu/mvc/_mvc.gif",alt:"Diagrama MVC"})),(0,t.kt)("h2",{id:"estrutura-de-pastas"},"Estrutura de pastas"),(0,t.kt)("p",null,"Todo o c\xf3digo produzido de forma manual para o projeto est\xe1 localizado dentro da pasta ",(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("inlineCode",{parentName:"strong"},"/src")),", outros arquivos localizados do lado de fora desta pasta como ",(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("inlineCode",{parentName:"strong"},"package.json"))," s\xe3o arquivos utilizados para definir configura\xe7\xf5es b\xe1sicas do projeto, como depend\xeancias, vari\xe1veis de ambiente, entre outras."),(0,t.kt)("p",null,"Aqui est\xe3o os principais diret\xf3rios da aplica\xe7\xe3o localizados dentro de ",(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("inlineCode",{parentName:"strong"},"/src"))," e que s\xe3o de importante compreens\xe3o para manuten\xe7\xe3o e atualiza\xe7\xe3o do projeto:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"server.ts:")," Esse arquivo \xe9 respons\xe1vel por executar a fun\xe7\xe3o ",(0,t.kt)("inlineCode",{parentName:"li"},"main")," da aplica\xe7\xe3o, que por sua vez, realiza conex\xf5es com as rotas, banco de dados, entre outros servi\xe7os, se tratando assim, do primeiro arquivo a ser executado quando o software \xe9 executado atrav\xe9s de comandos como ",(0,t.kt)("strong",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"strong"},"yarn start"))," ou ",(0,t.kt)("strong",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"strong"},"yarn dev")),"."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"/http/controllers:")," Dentro dessa pasta encontramos arquivos que dentro da arquitetura MVC s\xe3o conhecidos como controladores, estes, por sua vez, s\xe3o respons\xe1veis por receber requisi\xe7\xf5es do usu\xe1rio atrav\xe9s das rotas e retornar algum resultado."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"/interfaces:")," Aqui dentro est\xe3o localizado alguns arquivos que s\xe3o respons\xe1veis por definir ",(0,t.kt)("inlineCode",{parentName:"li"},"[interfaces](https://www.typescriptlang.org/docs/handbook/interfaces.html)")," que s\xe3o utilizadas ao longo da aplica\xe7\xe3o."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"/middlewares:")," Cont\xe9m alguns arquivos com m\xe9todos que s\xe3o respons\xe1veis por conter m\xe9todos que s\xe3o usados para realizar valida\xe7\xf5es quando um controlador \xe9 chamado pela rota."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"/models:")," Na arquitetura MVC, conhecida como modelo, essa camada \xe9 respons\xe1vel por conter os modelos respons\xe1veis por representar o dom\xednio da aplica\xe7\xe3o, estes cont\xeam um conjunto de m\xe9todos que interagem diretamente com a camada de dados."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"/repositories:")," Dentro de repositories, n\xf3s encontramos m\xe9todos respons\xe1veis por interagir com o modelo da nossa aplica\xe7\xe3o, que por sua vez carrega m\xe9todos que interagem diretamente com o banco de dados da aplica\xe7\xe3o. "),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"/routes:")," Dentro de routes, temos arquivos que s\xe3o basicamente respons\xe1veis por fornecer um caminho para que o usu\xe1rio interaja com os controladores."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"/services:")," Dentro de services encontramos arquivos que s\xe3o respons\xe1veis por controlar e fornecer fun\xe7\xf5es relacionadas a l\xf3gica de neg\xf3cio da aplica\xe7\xe3o, se trata da camada que interage e fornece par\xe2metros aos reposit\xf3rios."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"/utils:")," Esse diret\xf3rio cont\xeam m\xfaltiplas fun\xe7\xf5es que s\xe3o \xfateis para prover fun\xe7\xf5es gen\xe9ricas para a aplica\xe7\xe3o, como formatadores de data ou de texto, possivelmente utilizadas ao longo de toda a aplica\xe7\xe3o.")))}c.isMDXComponent=!0}}]);