"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[43],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>v});var o=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,o,r=function(e,a){if(null==e)return{};var t,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=o.createContext({}),l=function(e){var a=o.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p=function(e){var a=l(e.components);return o.createElement(d.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},m=o.forwardRef((function(e,a){var t=e.components,r=e.mdxType,n=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(t),m=r,v=c["".concat(d,".").concat(m)]||c[m]||u[m]||n;return t?o.createElement(v,i(i({ref:a},p),{},{components:t})):o.createElement(v,i({ref:a},p))}));function v(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var n=t.length,i=new Array(n);i[0]=m;var s={};for(var d in a)hasOwnProperty.call(a,d)&&(s[d]=a[d]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<n;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2991:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var o=t(7462),r=(t(7294),t(3905));const n={sidebar_position:1},i="Cliente",s={unversionedId:"arquitetura/cliente",id:"arquitetura/cliente",title:"Cliente",description:"O lado cliente adotou uma arquitetura que \xe9 comumente usada em m\xfaltiplas aplica\xe7\xf5es front-end, sejam elas desenvolvidas a partir do framework Flutter ou n\xe3o, para que assim, seja de f\xe1cil assimila\xe7\xe3o para qualquer mantenedor do projeto.",source:"@site/docs/arquitetura/cliente.md",sourceDirName:"arquitetura",slug:"/arquitetura/cliente",permalink:"/published_chat_app_docs/docs/arquitetura/cliente",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/arquitetura/cliente.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Servidor",permalink:"/published_chat_app_docs/docs/implantacao/servidor"},next:{title:"Servidor",permalink:"/published_chat_app_docs/docs/arquitetura/servidor"}},d={},l=[{value:"Modelo MVVM (Model-View-ViewModel)",id:"modelo-mvvm-model-view-viewmodel",level:2},{value:"Estrutura de pastas",id:"estrutura-de-pastas",level:2}],p={toc:l},c="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(c,(0,o.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cliente"},"Cliente"),(0,r.kt)("p",null,"O lado cliente adotou uma arquitetura que \xe9 comumente usada em m\xfaltiplas aplica\xe7\xf5es front-end, sejam elas desenvolvidas a partir do framework Flutter ou n\xe3o, para que assim, seja de f\xe1cil assimila\xe7\xe3o para qualquer mantenedor do projeto."),(0,r.kt)("h2",{id:"modelo-mvvm-model-view-viewmodel"},"Modelo MVVM (Model-View-ViewModel)"),(0,r.kt)("p",null,"O design pattern utilizado na aplica\xe7\xe3o se trata do modelo MVVM (Model-View-ViewModel), este modelo busca realizar uma separa\xe7\xe3o de responsabilidades separando componentes visuais da interface da parte l\xf3gica da aplica\xe7\xe3o."),(0,r.kt)("p",null,'Dentro desse design pattern desenvolvido para aplica\xe7\xf5es front-end, o "View" \xe9 respons\xe1vel por interagir e realizar todas suas fun\xe7\xf5es l\xf3gicas atrav\xe9s do "ViewModel", que por sua vez interage com o "Model" respons\xe1vel por fazer intera\xe7\xf5es diretas com nosso servidor.'),(0,r.kt)("p",null,"Esse ciclo de desenvolvimento pode ser visualizado atrav\xe9s deste diagrama disponibilizado pela plataforma de hospedagem DigitalOcean:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://journaldev.nyc3.digitaloceanspaces.com/2018/04/android-mvvm-pattern.png",alt:"Diagrama MVVM"})),(0,r.kt)("h2",{id:"estrutura-de-pastas"},"Estrutura de pastas"),(0,r.kt)("p",null,"O diret\xf3rio principal e que cont\xe9m todo c\xf3digo desenvolvido para a aplica\xe7\xe3o se encontra dentro do diret\xf3rio ",(0,r.kt)("inlineCode",{parentName:"p"},"/lib"),", dentro desse diret\xf3rio encontramos m\xfaltiplas pastas que s\xe3o respons\xe1veis por conter fun\xe7\xf5es essenciais ao desenvolvimento do projeto, o modelo adotado para o desenvolvimento de novas features \xe9 ",(0,r.kt)("a",{parentName:"p",href:"https://verygood.ventures/blog/very-good-flutter-architecture"},"layer-first"),". "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"main.dart:")," Esse arquivo \xe9 respons\xe1vel por executar a fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," da aplica\xe7\xe3o, que por sua vez, inicia o ciclo de vida do aplicativo Flutter e realiza um evento de chamada a primeira feature definida no escopo do m\xe9todo."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"/src:")," Dentro dessa pasta encontramos todas as camadas que comp\xf5em a aplica\xe7\xe3o."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"/src/application:")," Dentro da camada de aplica\xe7\xe3o encontramos arquivos e diret\xf3rios respons\xe1veis por trazer consigo toda a camada da aplica\xe7\xe3o que \xe9 respons\xe1vel por realizar uma intermedia\xe7\xe3o entre a camada de apresenta\xe7\xe3o com a camada de dom\xednio e data."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"/src/domain:")," Dentro desse diret\xf3rio temos tudo aquilo que \xe9 relacionado a camada de dom\xednio, respons\xe1vel por conter os principais modelos da nossa aplica\xe7\xe3o, carregam com si propriedades e m\xe9todos que sejam compat\xedveis com a camada de modelo localizada no lado servidor da aplica\xe7\xe3o."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"/src/data:")," Neste diret\xf3rio temos a camada de dados da aplica\xe7\xe3o, dentro dela encontramos tudo aquilo que interage com m\xe9todos respons\xe1veis por realizar chamadas para interfaces internas da aplica\xe7\xe3o do lado servidor do aplicativo ou de interfaces externas, sendo portanto, onde \xe9 recolhido todo dado din\xe2mico do projeto."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"/src/presentation:")," Dentro dessa pasta podemos encontrar todos os arquivos e diret\xf3rios que s\xe3o respons\xe1veis por trazer consigo tudo aquilo que \xe9 visualiz\xe1vel dentro da nossa aplica\xe7\xe3o para o cliente, se trata portanto, da camada de apresenta\xe7\xe3o.")))}u.isMDXComponent=!0}}]);